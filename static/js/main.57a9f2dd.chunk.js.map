{"version":3,"sources":["components/Home.js","components/Header.js","components/ScheduleCard.js","components/HeaderText.js","components/ScheduleCardBlock.js","components/TaskCard.js","components/CreateTaskButton.js","components/TaskCardBlock.js","components/NotesBlock.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Home","history","useHistory","handleAuthClick","event","console","log","window","gapi","auth2","getAuthInstance","signIn","push","process","className","src","isSignedIn","get","to","onClick","signOut","location","reload","Header","ScheduleCard","eventDate","moment","start","dateTime","format","summary","HeaderText","title","ScheduleCardBlock","useReducer","state","newState","data","error","loaded","fetching","setState","updateSigninStatus","minDate","Date","toISOString","maxDate","setDate","getDate","client","calendar","events","list","then","response","status","listUpcomingEvents","useEffect","listen","style","height","result","items","map","cur","key","id","TaskCard","task","updateTasks","apiServer","useState","showTaskInfo","handleTaskInfo","payload","setPayload","timeStarted","setTimeStarted","currentTime","utc","startedTime","time_started","timeDiff","diff","timeElapsed","setTimeElapsed","userID","currentUser","getBasicProfile","getId","handleTask","a","preventDefault","route","target","name","slice","length","axios","put","JSON","stringify","headers","delete","handleInputChange","value","newPayload","interval","setInterval","isNaN","_i","add","clearInterval","category","time_finished","hours","Math","floor","estimated_time","minutes","seconds","for","onChange","type","customStyles","content","top","left","right","bottom","marginRight","transform","CreateTaskButton","modalIsOpen","setIsOpen","estimatedTime","showError","setError","setErrorMsg","errorsList","setErrorsList","closeModal","post","errList","checkPayload","isOpen","onRequestClose","contentLabel","onSubmit","Object","entries","errors","errMsg","disabled","TaskCardBlock","loadTasks","toString","NotesBlock","getNotes","placeholder","Dashboard","signInStatus","setSignInStatus","App","CLIENT_ID","GOOGLE_API_CLIENT_ID","config","clientId","API_KEY","GOOGLE_API_KEY","apiKey","DISCOVERY_DOCS","discoveryDocs","SCOPES","scope","initClient","init","load","exact","path","children","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57a9f2dd.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport './Home.css';\n\nfunction Home() {\n  const history = useHistory();\n\n  function handleAuthClick(event) {\n    console.log(window.gapi.auth2.getAuthInstance());\n    window.gapi.auth2.getAuthInstance().signIn();\n    history.push(process.env.PUBLIC_URL + \"/dashboard\")\n  }\n\n  function handleSignoutClick(event) {\n    window.gapi.auth2.getAuthInstance().signOut();\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-container\">\n          <div className=\"logo\">\n            <img src=\"logo on dark.png\" />\n          </div>\n          <div className=\"nav-buttons\">\n            {window.gapi.auth2.getAuthInstance().isSignedIn.get() ?\n              <>\n                <button><Link to={process.env.PUBLIC_URL + \"/dashboard\"}>Dashboard</Link></button>\n                <button onClick={handleSignoutClick}>Sign Out</button> \n              </>\n              :\n              <button onClick={handleAuthClick}>Sign In</button>\n            }\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"nav-extension\">\n        <div className=\"extension-content\">\n          <div className=\"extension-header\">\n            Nibble makes it easier for you to \n            plan your daily tasks around your schedule.\n          </div>\n          <div className=\"extension-info\">\n            Take advantage of features such as Google calendar sync,\n            timing tasks, setting goals, and viewing your productivity on\n            a user dashboard to plan out your tasks daily and increase\n            your productivity!\n          </div>\n          <button className=\"green-button\" onClick={handleAuthClick}>\n            Get Started Today!\n          </button>\n        </div>\n        <div className=\"extension-picture\">\n          <img src=\"top_image.svg\" />\n        </div>\n      </div>\n\n      <div className=\"alternating-blocks\">\n        <div className=\"img-text-block\">\n          <div className=\"text-block\">\n            <div className=\"text-block-header\">Plan out your schedule</div>\n            <div className=\"text-block-content\">\n              Check your Google calendar to see your tasks for the day\n              or the week and create tasks accordingly \n            </div>\n          </div>\n          <div className=\"image-block\">\n            <img src=\"plan_schedule.svg\" />\n          </div>\n        </div>\n        <div className=\"img-text-block\">\n          <div className=\"text-block\">\n            <div className=\"text-block-header\">Create Goals</div>\n            <div className=\"text-block-content\">\n              Decide your goals of the week based off your tasks\n              and mark them off one by one \n            </div>\n          </div>\n          <div className=\"image-block\">\n            <img src=\"create_goals.svg\" />\n          </div>\n        </div>\n        <div className=\"img-text-block\">\n          <div className=\"text-block\">\n            <div className=\"text-block-header\">Time your tasks</div>\n            <div className=\"text-block-content\">\n              See how long your tasks take and keep track of\n              how much time you spent on each one\n            </div>\n          </div>\n          <div className=\"image-block\">\n            <img src=\"time_tasks.svg\" />\n          </div>\n        </div>\n        <div className=\"bottom-text\">\n          Start Nibbling Through Your Work!\n          <button className=\"green-button\" onClick={handleAuthClick}>Get Started Today!</button>\n        </div>\n      </div>\n      <footer>\n        <img className=\"logo-bottom\" src=\"logo on white.png\" />\n        © Copyright 2020. All rights reserved.\n      </footer>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport {  useHistory } from 'react-router-dom';\n\nfunction Header() {\n  const history = useHistory()\n\n  function handleSignoutClick(event) {\n    window.gapi.auth2.getAuthInstance().signOut();\n    history.push(process.env.PUBLIC_URL + '/');\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"flex justify-between items-center px-5\">\n      <img src=\"logo on white.svg\" className=\"h-20 mb-4 w-auto mt-4\"/>\n      <div className=\"flex\">\n        <button \n          className=\"bg-yellow-500 hover:bg-yellow-600 text-white text-3xl font-bold py-2 px-4 rounded\"\n          onClick={handleSignoutClick}\n        >\n          Sign Out\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport moment from 'moment';\n\nfunction ScheduleCard({event}) {\n\n  let eventDate = moment(event.start.dateTime);\n  eventDate = eventDate.format(\"M/D/YY HH:mm\");\n\n  return (\n    <div className=\"max-w-sm w-full rounded-lg bg-white lg:max-w-full mb-4 shadow-lg\">\n      <div className=\"p-4 flex flex-col justify-between leading-normal\">\n        <div className=\"my-2\">\n          <div className=\"text-gray-900 font-bold text-xl\">{`${event.summary}`}</div>\n          {/* <div className=\"text-gray-700 text-base\">{`${task.category}`}</div> */}\n          <div className=\" text-sm text-gray-900 leading-none\">{`${eventDate}`}</div>\n        </div>\n      </div>\n    </div>\n    // <div> \n    //   {`${event.summary} (${eventDate})`}\n    // </div>\n  )\n}\n\nexport default ScheduleCard;","import React from 'react';\n\nfunction HeaderText({title = \"Header\"}) {\n  \n  return (\n    <div> \n      <h2 className=\"text-4xl mt-2 ml-6 mr-2\">{title}</h2>\n    </div>\n  )\n}\n\nexport default HeaderText;","import React, { useReducer, useEffect } from 'react';\nimport ScheduleCard from './ScheduleCard';\nimport HeaderText from './HeaderText';\n\nimport './ScheduleCardBlock.css';\n\nfunction ScheduleCardBlock() {\n  const initialState = {\n    data: null,\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n  function updateSigninStatus() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      // authorizeButton.style.display = 'none';\n      // signoutButton.style.display = 'block';\n      listUpcomingEvents();\n    } else {\n      // authorizeButton.style.display = 'block';\n      // signoutButton.style.display = 'none';\n    }\n  }\n\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n  function listUpcomingEvents() {\n    const minDate = (new Date()).toISOString();\n    let maxDate= (new Date());\n    maxDate.setDate(maxDate.getDate() + 7);\n    maxDate = maxDate.toISOString();\n    window.gapi.client.calendar.events.list({\n      'calendarId': 'primary',\n      'timeMin': minDate,\n      'timeMax': maxDate,\n      'showDeleted': false,\n      'singleEvents': true,\n      'maxResults': 20,\n      'orderBy': 'startTime'\n    }).then(function(response) {\n      const { data, status } = {\n        data: response,\n        status: response.status\n      }\n      if (status !== 200) {\n        return setState({\n          data,\n          error: true,\n          loaded: true,\n          fetching: false,\n        })\n      }\n      setState({\n        data,\n        error: null,\n        loaded: true,\n        fetching: false,\n      })\n    });\n  }\n\n  useEffect(() => {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n    // Handle the initial sign-in state.\n    updateSigninStatus();\n  }, [])\n\n\n  // const { error, data } = state\n  return (\n    <div className=\"container w-1/3 schedTheme\">\n      <HeaderText title=\"Schedule\"/>\n      <div className=\"p-6 rounded-md overflow-y-scroll schedBody\" style={{height: \"76vh\"}}>\n        {state.loaded ? state.data.result.items.map(cur => {\n          return <ScheduleCard key={cur.id} event={cur}/>\n        }) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduleCardBlock;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\nfunction TaskCard({task, updateTasks}) {\n  const apiServer = 'http://localhost:5001/'\n  const [showTaskInfo, handleTaskInfo] = useState(false);\n  const [payload, setPayload] = useState({...task})\n  const [timeStarted, setTimeStarted] = useState(false)\n\n  const currentTime = moment().utc();\n  const startedTime = task.time_started ? moment(task.time_started) : moment().utc();\n  const timeDiff = moment.utc(moment(currentTime,\"DD/MM/YYYY HH:mm:ss\").diff(moment(startedTime,\"DD/MM/YYYY HH:mm:ss\")));\n  const [timeElapsed, setTimeElapsed] = useState(timeDiff);\n  const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId();\n  \n  useEffect(() => {\n    if (task.time_started) {\n      setTimeStarted(true);\n    }\n    if (timeStarted) {\n      const interval = setInterval(() => {\n        if (!isNaN(timeElapsed._i)) {\n          setTimeElapsed(timeElapsed => moment(timeElapsed).add(1, 'seconds'));\n        }\n      }, 1000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [timeStarted])\n\n  async function handleTask(event) {\n    event.preventDefault();\n    const route = event.target.name+\"Task\";\n    console.log(route);\n    console.log(payload);\n    // newPayload = {...payload}\n    payload['userID'] = userID\n    setPayload(payload);\n    console.log(route.slice(0, route.length-4) == \"update\");\n    if (route.slice(0, route.length-4) == \"update\") {\n      await axios.put(`${apiServer}${route}/${userID}`, JSON.stringify(payload), {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n    } else if (route.slice(0, route.length-4) == \"delete\") {\n      await axios.delete(`${apiServer}${route}/${userID}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        data: payload\n      })\n    }\n    handleTaskInfo(!showTaskInfo);\n    updateTasks();\n  }\n\n  async function startTask(event) {\n    event.preventDefault();\n    const route = \"startTask\";\n    payload['userID'] = userID\n    setPayload(payload);\n    await axios.put(`${apiServer}${route}/${userID}`, JSON.stringify(payload), {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    setTimeStarted(true);\n    updateTasks();\n    handleTaskInfo(!showTaskInfo);\n  }\n\n  async function endTask(event) {\n    event.preventDefault();\n    const route = \"endTask\";\n    payload['userID'] = userID\n    setPayload(payload);\n    await axios.put(`${apiServer}${route}/${userID}`, JSON.stringify(payload), {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    setTimeStarted(false);\n    handleTaskInfo(!showTaskInfo);\n    updateTasks();\n  }\n\n  // async function handleTaskDelete(event) {\n  //   console.log(payload)\n  //   event.preventDefault();\n  //   const route = event.target.name+\"Task\";\n  //   console.log(route);\n  //   console.log(payload);\n  //   // newPayload = {...payload}\n  //   payload['userID'] = userID\n  //   setPayload(payload);\n  //   console.log(payload);\n  //   await axios.delete(`${apiServer}deleteTask/${userID}`, JSON.stringify(payload), {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     }\n  //   })\n  //   updateTasks();\n  //   handleTaskInfo(!showTaskInfo);\n  // }\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let newPayload = {...payload}\n    newPayload[name] = value;\n    setPayload(newPayload);\n  }\n\n  return(\n    <div className=\"max-w-sm w-full bg-white lg:max-w-full mb-4\">\n      <div\n        className=\"border border-white rounded-md shadow-lg p-4 flex flex-col justify-between leading-normal\"\n        onClick={() => handleTaskInfo(!showTaskInfo)}\n      >\n        <div className=\"my-2 flex items-center justify-between\">\n          <div className=\"text-gray-900 font-bold text-xl w-4/12\">{`${task.title}`}</div>\n          <div className=\"text-gray-700 text-base w-2/12\">{`${task.category}`}</div>\n          <div className=\"text-sm text-gray-900 leading-none w-4/12\">\n            {timeStarted && !task.time_finished ? `${timeElapsed.format(\"HH:mm:ss\")} / `: null}\n            {task.time_finished ? `${moment.utc(moment(moment(task.time_finished),\"DD/MM/YYYY HH:mm:ss\").diff(moment(startedTime,\"DD/MM/YYYY HH:mm:ss\"))).format(\"HH:mm:ss\")} / ` : null}\n            {moment.utc().hours(Math.floor(task.estimated_time/60)).minutes(Math.floor(task.estimated_time%60)).seconds(0).format(\"HH:mm:ss\")}\n          </div>\n        </div>\n      </div>\n      {\n        showTaskInfo &&\n        <div>\n          <div className=\"border border-white rounded-md p-4 flex flex-col justify-between leading-normal\">\n            <div className=\"w-full px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-edit-task\">\n                Task Name\n              </label>\n              <div className=\"flex items-start justify-between w-full\">\n                <input \n                  name=\"title\" \n                  onChange={handleInputChange}\n                  className=\"appearance-none block w-3/4 bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                  id=\"grid-edit-task\"\n                  type=\"text\"\n                  value={payload.title}\n                />\n                {!task.time_finished ? task.time_started ? \n                  <div \n                    className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded\"\n                    onClick={endTask}\n                  >\n                    End\n                  </div> \n                :\n                  <div \n                    className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded\"\n                    onClick={startTask}\n                  >\n                    Start\n                  </div> : null}\n              </div>\n            </div>\n            <div className=\"w-3/4 px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-edit-task\">\n                Category\n              </label>\n              <input\n                name=\"category\"\n                onChange={handleInputChange}\n                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-edit-task\"\n                type=\"text\"\n                value={payload.category}\n              />\n            </div>\n            <div className=\"w-1/4 px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-edit-task\">\n                Est. Time (min)\n              </label>\n              <input\n                name=\"estimated_time\"\n                onChange={handleInputChange}\n                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-edit-task\"\n                type=\"number\"\n                value={payload.estimated_time}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-between px-6 py-4\">\n            <input\n              name=\"update\"\n              type=\"button\"\n              value=\"Update\"\n              className=\"bg-blue-400 hover:bg-blue-500 text-white font-bold py-2 px-3 rounded\"\n              onClick={handleTask}\n            />\n            <input\n              name=\"delete\"\n              type=\"button\"\n              value=\"Delete\"\n              className=\"bg-red-400 hover:bg-red-500 text-white font-bold py-2 px-4 rounded\"\n              onClick={handleTask}\n            />\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default TaskCard;","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport axios from 'axios';\n \nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n \n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n// Modal.setAppElement('#yourAppElement')\n \nfunction CreateTaskButton({updateTasks}){\n  var subtitle;\n  const apiServer = 'http://localhost:5001/'\n  const [modalIsOpen,setIsOpen] = useState(false);\n  const initialPayload = {\n    title: '',\n    category: '',\n    estimatedTime: 0\n  }\n  const [payload, setPayload] = useState(initialPayload);\n\n  const [showError, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [errorsList, setErrorsList] = useState({})\n  // let showError = false;\n  // let errorMsg = '';\n\n  function openModal() {\n    setIsOpen(true);\n  }\n \n  function closeModal(){\n    setIsOpen(false);\n    setError(false);\n    setErrorMsg('');\n  }\n\n  function checkPayload() {\n    const { estimatedTime, title, category} = payload;\n    let errList = {}\n    if (estimatedTime && estimatedTime > 120) {\n      setError(true);\n      // setErrorMsg(\"That's too much time! Estimated time should be less than 2 hours for best work quality!\")\n      errList['estimatedTime'] = \"That's too much time! Estimated time should be less than 2 hours for best work quality!\"\n    }\n    else if (estimatedTime && estimatedTime == 0) {\n      setError(true);\n      errList['estimatedTime'] = \"Please set your estimated time for this task!\";\n    }\n    else {\n      setError(false)\n    }\n    console.log(errList);\n    setErrorsList(errList);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(payload);\n    const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId();\n    payload['userID'] = userID\n    setPayload(payload);\n    console.log(payload);\n    if (!showError)\n      await axios.post(`${apiServer}createTask`, JSON.stringify(payload), {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n    closeModal();\n    updateTasks();\n  }\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    payload[name] = value;\n    setPayload(payload);\n    console.log(payload);\n    checkPayload();\n  }\n \n  return (\n    <div>\n      <button className=\"text-yellow-500 hover:text-yellow-600 font-bold text-4xl leading-5\" onClick={openModal}>+</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\" // change name of this?\n      >\n        <div className=\"block uppercase tracking-wide text-gray-900 text-xl font-bold mb-2\">Create Task</div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\n                Task Name\n              </label>\n              <input name=\"title\" onChange={handleInputChange} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-first-name\" type=\"text\" />\n            </div>\n            <div className=\"w-3/4 px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\n                Category\n              </label>\n              <input name=\"category\" onChange={handleInputChange} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-first-name\" type=\"text\" />\n            </div>\n            <div className=\"w-1/4 px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\n                Est. Time (min)\n              </label>\n              <input\n                name=\"estimatedTime\"\n                onChange={handleInputChange}\n                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500 \"\n                id=\"grid-first-name\"\n                type=\"text\"\n                />\n            </div>\n          </div>\n          { \n            showError &&\n            Object.entries(errorsList).map( ([errors, errMsg]) => {\n              return <div className=\"bg-red-300 p-4 mb-2\">\n                {console.log(errors, errMsg)}\n                {errMsg}\n              </div>\n            })\n          }\n          <input \n            type=\"submit\"\n            value=\"Create\"\n            onChange={handleInputChange}\n            // className={showError ? \n            //   \"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded\" :\n            //   \"bg-yellow-300 text-white font-bold py-2 px-4 rounded\"\n            // }\n            className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded\"\n            disabled={showError}\n            />\n        </form>\n\n      </Modal>\n    </div>\n  );\n}\n\nexport default CreateTaskButton;","import React, { useReducer, useEffect } from 'react';\nimport TaskCard from './TaskCard';\nimport HeaderText from './HeaderText';\nimport CreateTaskButton from './CreateTaskButton';\nimport axios from 'axios';\n\nimport './TaskCardBlock.css';\n\nfunction TaskCardBlock() {\n  const apiServer = 'http://localhost:5001/';\n\n  const initialState = {\n    data: null,\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n\n  async function loadTasks() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId().toString();\n      console.log(`${apiServer}getTasks/${userID}`)\n      const response = await axios.get(`${apiServer}getTasks/${userID}`)\n      const { data, status } = {\n        data: response.data,\n        status: response.status\n      }\n      \n      // error? \n      if (status !== 200) {\n        return setState({\n          data,\n          error: true,\n          loaded: true,\n          fetching: false,\n        })\n      }\n\n      // no error \n      setState({\n        data,\n        error: null,\n        loaded: true,\n        fetching: false,\n      })\n    }\n  }\n\n  useEffect(() => {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(loadTasks);\n    // Handle the initial sign-in state.\n    loadTasks();\n  }, [])\n\n  // let showTaskInfo = false;\n  // const handleTaskInfo = () => {\n  //   showTaskInfo = !showTaskInfo;\n  // }\n  return (\n    <div className=\"container w-2/5 taskTheme\">\n      <div className=\"container flex items-center justify-between\">\n        <HeaderText title=\"Tasks\"/>\n        <CreateTaskButton updateTasks={loadTasks}/>\n      </div>\n      <div className=\"p-6 rounded-md overflow-y-scroll\" style={{height: \"76vh\"}}>\n        {state.loaded ? state.data.map(cur => {\n          return <TaskCard key={cur.id} task={cur} updateTasks={loadTasks}/>\n        }) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default TaskCardBlock;","import React, { useState, useReducer, useEffect } from 'react';\nimport HeaderText from \"./HeaderText\";\nimport axios from 'axios';\n\nimport './NotesBlock.css';\n\nfunction NotesBlock() {\n  const apiServer = 'http://localhost:5001/';\n  const [payload, setPayload] = useState({});\n\n  async function onInputChange(event) {\n    const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId();\n    setState({\n      data: event.target.value\n    });\n    payload['userID'] = userID;\n    payload['note'] = event.target.value;\n    setPayload(payload);\n    await axios.put(`${apiServer}updateNotes/${userID}`, JSON.stringify(payload), {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n  }\n\n  const initialState = {\n    data: null,\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n\n  async function getNotes() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId().toString();\n      const response = await axios.get(`${apiServer}getNotes/${userID}`)\n      const { data, status } = {\n        data: response.data,\n        status: response.status\n      }\n      \n      // error? \n      if (status !== 200) {\n        return setState({\n          data,\n          error: true,\n          loaded: true,\n          fetching: false,\n        })\n      }\n\n      // no error \n      setState({\n        data,\n        error: null,\n        loaded: true,\n        fetching: false,\n      })\n    }\n  }\n\n  useEffect(() => {\n    getNotes();\n  }, [])\n\n  return (\n    <div className=\"container w-1/3 notesTheme\">\n      <div className=\"container flex items-center\">\n        <HeaderText title=\"Notes\"/>\n      </div>\n      <div className=\"p-6 rounded-md overflow-y-scroll schedBody\" style={{height: \"76vh\"}}>\n        {state.loaded ?\n        <textarea \n        className=\"shadow-inner p-4 rounded-md w-full h-full\" \n        style={{height: \"74vh\"}}\n        placeholder=\"Write some notes...\" \n        value={state.data.content}\n        onChange={onInputChange}\n        /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default NotesBlock;","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ScheduleCardBlock from './ScheduleCardBlock';\nimport TaskCardBlock from './TaskCardBlock';\nimport NotesBlock from './NotesBlock';\n\nfunction Dashboard() {\n  const [signInStatus, setSignInStatus] = useState(false);\n\n  useEffect(() => {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n    updateSigninStatus();\n  }, [])\n\n  function updateSigninStatus() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      setSignInStatus(true);\n    }\n  }\n\n  return (\n    <>\n      {signInStatus ?\n        <>\n          <Header />\n          <div className=\"flex justify-between w-full\">\n            <ScheduleCardBlock />\n            <TaskCardBlock />\n            <NotesBlock />\n          </div> \n        </> \n      : \n        null}\n    </>\n  );\n}\n\nexport default Dashboard;","import React, { useReducer, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport config from './apiGoogleConfig.json';\nimport './App.css';\nimport './tailwind.css'\n\nfunction App() {\n  const initialState = {\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n  \n  const CLIENT_ID = process.env.GOOGLE_API_CLIENT_ID || config.clientId;\n  const API_KEY = process.env.GOOGLE_API_KEY || config.apiKey;\n\n  // Array of API discovery doc URLs for APIs used by the quickstart\n  const DISCOVERY_DOCS = config.discoveryDocs;\n\n  // Authorization scopes required by the API; multiple scopes can be\n  // included, separated by spaces.\n  const SCOPES = config.scope;\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  function handleClientLoad() {\n    window.gapi.load('client:auth2', initClient);\n  }\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n\n  function initClient() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      setState({\n        error: true,\n        loaded: true,\n        fetching: false,\n      })\n    }, function(error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    handleClientLoad();\n  }, [])\n\n  return (\n    <div className=\"App w-full nibbleTheme\">\n      {/* <Home /> */}\n      {state.loaded ?\n      <>\n        <Router>\n          <Switch>\n            <Route exact path={process.env.PUBLIC_URL + '/'} children={<Home />} />\n            <Route exact path={process.env.PUBLIC_URL + \"/dashboard\"} children={<Dashboard />} />\n          </Switch>\n        </Router>\n\n      </>\n      : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}