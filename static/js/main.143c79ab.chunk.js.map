{"version":3,"sources":["components/Home.js","components/Header.js","components/ScheduleCard.js","components/HeaderText.js","components/ScheduleCardBlock.js","components/TaskCard.js","components/CreateTaskButton.js","components/TaskCardBlock.js","components/NotesBlock.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Home","history","useHistory","handleAuthClick","event","console","log","window","gapi","auth2","getAuthInstance","signIn","push","className","src","isSignedIn","get","to","onClick","signOut","location","reload","Header","ScheduleCard","eventDate","Date","start","dateTime","getMonth","getDate","getFullYear","getHours","getMinutes","summary","HeaderText","title","ScheduleCardBlock","useReducer","state","newState","data","error","loaded","fetching","setState","updateSigninStatus","minDate","toISOString","maxDate","setDate","client","calendar","events","list","then","response","status","listUpcomingEvents","useEffect","listen","style","height","result","items","map","cur","key","id","TaskCard","task","currentTime","moment","utc","startedTime","time_started","timeDiff","diff","useState","timeElapsed","setTimeElapsed","interval","setInterval","add","clearInterval","category","format","hours","Math","floor","estimated_time","minutes","seconds","customStyles","content","top","left","right","bottom","marginRight","transform","CreateTaskButton","updateTasks","modalIsOpen","setIsOpen","payload","setPayload","closeModal","a","preventDefault","userID","currentUser","getBasicProfile","getId","axios","post","JSON","stringify","headers","handleInputChange","target","value","name","isOpen","onRequestClose","contentLabel","onSubmit","for","onChange","type","TaskCardBlock","apiServer","loadTasks","toString","NotesBlock","put","getNotes","placeholder","Dashboard","signInStatus","setSignInStatus","App","CLIENT_ID","config","clientId","API_KEY","apiKey","DISCOVERY_DOCS","discoveryDocs","SCOPES","scope","initClient","init","load","exact","path","children","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+qBA6GeA,MAzGf,WACE,IAAMC,EAAUC,cAEhB,SAASC,EAAgBC,GACvBC,QAAQC,IAAIC,OAAOC,KAAKC,MAAMC,mBAC9BH,OAAOC,KAAKC,MAAMC,kBAAkBC,SACpCV,EAAQW,KAAK,cAQf,OACE,6BACE,6BACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,QACb,yBAAKC,IAAI,sBAEX,yBAAKD,UAAU,eACZN,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAWC,MAC9C,oCACE,gCAAQ,kBAAC,IAAD,CAAMC,GAAG,cAAT,cACR,4BAAQC,QAhBtB,SAA4Bd,GAC1BG,OAAOC,KAAKC,MAAMC,kBAAkBS,UACpCZ,OAAOa,SAASC,WAcJ,aAGF,4BAAQH,QAASf,GAAjB,cAMR,yBAAKU,UAAU,iBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBAAf,iFAIA,yBAAKA,UAAU,kBAAf,wMAMA,4BAAQA,UAAU,eAAeK,QAASf,GAA1C,uBAIF,yBAAKU,UAAU,qBACb,yBAAKC,IAAI,oBAIb,yBAAKD,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBAAf,0BACA,yBAAKA,UAAU,sBAAf,sGAKF,yBAAKA,UAAU,eACb,yBAAKC,IAAI,wBAGb,yBAAKD,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBAAf,gBACA,yBAAKA,UAAU,sBAAf,oFAKF,yBAAKA,UAAU,eACb,yBAAKC,IAAI,uBAGb,yBAAKD,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBAAf,mBACA,yBAAKA,UAAU,sBAAf,uFAKF,yBAAKA,UAAU,eACb,yBAAKC,IAAI,qBAGb,yBAAKD,UAAU,eAAf,oCAEE,4BAAQA,UAAU,eAAeK,QAASf,GAA1C,wBAGJ,gCACE,yBAAKU,UAAU,cAAcC,IAAI,sBADnC,+CC/ESQ,MAnBf,WACE,IAAMrB,EAAUC,cAQhB,OACE,yBAAKW,UAAU,0CACb,yBAAKC,IAAI,oBAAoBD,UAAU,qBACvC,yBAAKA,UAAU,QACb,4BAAQK,QAVd,SAA4Bd,GAC1BG,OAAOC,KAAKC,MAAMC,kBAAkBS,UACpClB,EAAQW,KAAK,KACbL,OAAOa,SAASC,WAOZ,eCOOE,MArBf,YAAgC,IAATnB,EAAQ,EAARA,MAEjBoB,EAAY,IAAIC,KAAKrB,EAAMsB,MAAMC,UAGrC,OAFAH,EAAS,UAAMA,EAAUI,WAAW,EAA3B,YAAgCJ,EAAUK,UAA1C,YAAuDL,EAAUM,cAAjE,YAAkFN,EAAUO,WAA5F,YAA0GP,EAAUQ,cAG3H,yBAAKnB,UAAU,oEACb,yBAAKA,UAAU,oDACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mCAAf,UAAqDT,EAAM6B,UAE3D,yBAAKpB,UAAU,uCAAf,UAAyDW,QCFpDU,MATf,YAAyC,IAAD,IAAnBC,aAAmB,MAAX,SAAW,EAEtC,OACE,6BACE,wBAAItB,UAAU,sBAAsBsB,K,MCqF3BC,MArFf,WACE,IAD2B,EAQDC,sBADV,SAACC,EAAOC,GAAR,sBAA2BD,EAA3B,GAAqCC,KANhC,CACnBC,KAAM,KACNC,MAAO,KACPC,QAAQ,EACRC,UAAU,IALe,mBAQpBL,EARoB,KAQbM,EARa,KAc3B,SAASC,IACHtC,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAWC,OAerD,WACE,IAAM8B,GAAW,IAAIrB,MAAQsB,cACzBC,EAAU,IAAIvB,KAClBuB,EAAQC,QAAQD,EAAQnB,UAAY,GACpCmB,EAAUA,EAAQD,cAClBxC,OAAOC,KAAK0C,OAAOC,SAASC,OAAOC,KAAK,CACtC,WAAc,UACd,QAAWP,EACX,QAAWE,EACX,aAAe,EACf,cAAgB,EAChB,WAAc,GACd,QAAW,cACVM,MAAK,SAASC,GAAW,IAAD,EACA,CACvBf,KAAMe,EACNC,OAAQD,EAASC,QAFXhB,EADiB,EACjBA,KAIR,GAAe,MALU,EACXgB,OAKZ,OAAOZ,EAAS,CACdJ,OACAC,OAAO,EACPC,QAAQ,EACRC,UAAU,IAGdC,EAAS,CACPJ,OACAC,MAAO,KACPC,QAAQ,EACRC,UAAU,OA1CZc,GAuDJ,OARAC,qBAAU,WACRnD,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAW4C,OAAOd,GAEtDA,MACC,IAKD,yBAAKhC,UAAU,8BACb,kBAAC,EAAD,CAAYsB,MAAM,aAClB,yBAAKtB,UAAU,0DAA0D+C,MAAO,CAACC,OAAQ,SACtFvB,EAAMI,OAASJ,EAAME,KAAKsB,OAAOC,MAAMC,KAAI,SAAAC,GAC1C,OAAO,kBAAC,EAAD,CAAcC,IAAKD,EAAIE,GAAI/D,MAAO6D,OACtC,Q,yCCjDEG,MAjCf,YAA2B,IAARC,EAAO,EAAPA,KACXC,EAAcC,MAASC,MACvBC,EAAcF,IAAOF,EAAKK,cAC1BC,EAAWJ,IAAOC,IAAID,IAAOD,EAAY,uBAAuBM,KAAKL,IAAOE,EAAY,yBAHtE,EAIcI,mBAASF,GAJvB,mBAIjBG,EAJiB,KAIJC,EAJI,KAkBxB,OAZArB,qBAAU,WACR,GAAIW,EAAKK,aAAc,CACrB,IAAMM,EAAWC,aAAY,WAC3BF,GAAe,SAAAD,GAAW,OAAIP,IAAOO,GAAaI,IAAI,EAAG,gBACxD,KAEH,OAAO,WACLC,cAAcH,OAGjB,IAGD,yBAAKnE,UAAU,+CACb,yBAAKA,UAAU,6FACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,0CAAf,UAA4DwD,EAAKlC,QACjE,yBAAKtB,UAAU,kCAAf,UAAoDwD,EAAKe,WACzD,yBAAKvE,UAAU,8CACZwD,EAAKK,aAAL,UAAuBI,EAAYO,OAAO,YAA1C,MAA2D,KAD9D,IACqEd,IAAOC,MAAMc,MAAMC,KAAKC,MAAMnB,EAAKoB,eAAe,KAAKC,QAAQH,KAAKC,MAAMnB,EAAKoB,eAAe,KAAKE,QAAQ,GAAGN,OAAO,iB,kCCxB9LO,EAAe,CACnBC,QAAU,CACRC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAqFbC,MA9Ef,YAAyC,IAAdC,EAAa,EAAbA,YAAa,EAGNxB,oBAAS,GAHH,mBAG/ByB,EAH+B,KAGnBC,EAHmB,OAIR1B,mBAAS,IAJD,mBAI/B2B,EAJ+B,KAItBC,EAJsB,KAUtC,SAASC,IACPH,GAAU,GAX0B,4CActC,WAA4BnG,GAA5B,eAAAuG,EAAA,6DACEvG,EAAMwG,iBACNvG,QAAQC,IAAIkG,GACNK,EAAStG,OAAOC,KAAKC,MAAMC,kBAAkBoG,YAAY9F,MAAM+F,kBAAkBC,QACvFR,EAAO,OAAaK,EACpBJ,EAAWD,GACXnG,QAAQC,IAAIkG,GANd,SAOQS,IAAMC,KAAN,UAnBU,yBAmBV,cAAqCC,KAAKC,UAAUZ,GAAU,CAClEa,QAAS,CACP,eAAgB,sBATtB,OAYEX,IACAL,IAbF,6CAdsC,sBA8BtC,SAASiB,EAAkBlH,GACzB,IAAMmH,EAASnH,EAAMmH,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACpBjB,EAAQiB,GAAQD,EAChBf,EAAWD,GACXnG,QAAQC,IAAIkG,GAGd,OACE,6BACE,4BAAQ3F,UAAU,qEAAqEK,QAnC3F,WACEqF,GAAU,KAkCR,KACA,kBAAC,IAAD,CACEmB,OAAQpB,EACRqB,eAAgBjB,EAChB9C,MAAOgC,EACPgC,aAAa,iBAGb,yBAAK/G,UAAU,sEAAf,eACA,0BAAMgH,SAlD0B,6CAmD9B,yBAAKhH,UAAU,6BACb,yBAAKA,UAAU,4BACb,2BAAOA,UAAU,qEAAqEiH,IAAI,mBAA1F,aAGA,2BAAOL,KAAK,QAAQM,SAAUT,EAAmBzG,UAAU,6KAA6KsD,GAAG,kBAAkB6D,KAAK,UAEpQ,yBAAKnH,UAAU,2BACb,2BAAOA,UAAU,qEAAqEiH,IAAI,mBAA1F,YAGA,2BAAOL,KAAK,WAAWM,SAAUT,EAAmBzG,UAAU,6KAA6KsD,GAAG,kBAAkB6D,KAAK,UAEvQ,yBAAKnH,UAAU,2BACb,2BAAOA,UAAU,qEAAqEiH,IAAI,mBAA1F,kBAGA,2BAAOL,KAAK,gBAAgBM,SAAUT,EAAmBzG,UAAU,6KAA6KsD,GAAG,kBAAkB6D,KAAK,WAG9Q,2BAAOA,KAAK,SAASR,MAAM,SAASO,SAAUT,EAAmBzG,UAAU,iF,MClBtEoH,MA/Df,WACE,IAAMC,EAAY,yBADK,EAUG7F,sBADV,SAACC,EAAOC,GAAR,sBAA2BD,EAA3B,GAAqCC,KANhC,CACnBC,KAAM,KACNC,MAAO,KACPC,QAAQ,EACRC,UAAU,IAPW,mBAUhBL,EAVgB,KAUTM,EAVS,cAYRuF,IAZQ,2EAYvB,kCAAAxB,EAAA,0DACMpG,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAWC,MADrD,wBAEU6F,EAAStG,OAAOC,KAAKC,MAAMC,kBAAkBoG,YAAY9F,MAAM+F,kBAAkBC,QAAQoB,WAC/F/H,QAAQC,IAAR,UAAe4H,EAAf,oBAAoCrB,IAHxC,SAI2BI,IAAMjG,IAAN,UAAakH,EAAb,oBAAkCrB,IAJ7D,UAIUtD,EAJV,SAK6B,CACvBf,KAAMe,EAASf,KACfgB,OAAQD,EAASC,QAFXhB,EALZ,EAKYA,KAMO,MAXnB,EAKkBgB,OALlB,yCAYaZ,EAAS,CACdJ,OACAC,OAAO,EACPC,QAAQ,EACRC,UAAU,KAhBlB,OAqBIC,EAAS,CACPJ,OACAC,MAAO,KACPC,QAAQ,EACRC,UAAU,IAzBhB,6CAZuB,sBAgDvB,OANAe,qBAAU,WACRnD,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAW4C,OAAOwE,GAEtDA,MACC,IAGD,yBAAKtH,UAAU,6BACb,yBAAKA,UAAU,+CACb,kBAAC,EAAD,CAAYsB,MAAM,UAClB,kBAAC,EAAD,CAAkBkE,YAAa8B,KAEjC,yBAAKtH,UAAU,gDAAgD+C,MAAO,CAACC,OAAQ,SAC5EvB,EAAMI,OAASJ,EAAME,KAAKwB,KAAI,SAAAC,GAC7B,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAIE,GAAIE,KAAMJ,OACjC,Q,MCmBEoE,MA9Ef,WACE,IAAMH,EAAY,yBADE,EAEUrD,mBAAS,IAFnB,mBAEb2B,EAFa,KAEJC,EAFI,iDAIpB,WAA6BrG,GAA7B,eAAAuG,EAAA,6DACQE,EAAStG,OAAOC,KAAKC,MAAMC,kBAAkBoG,YAAY9F,MAAM+F,kBAAkBC,QACvFpE,EAAS,CACPJ,KAAMpC,EAAMmH,OAAOC,QAErBhB,EAAO,OAAaK,EACpBL,EAAO,KAAWpG,EAAMmH,OAAOC,MAC/Bf,EAAWD,GAPb,SAQQS,IAAMqB,IAAN,UAAaJ,EAAb,uBAAqCrB,GAAUM,KAAKC,UAAUZ,GAAU,CAC5Ea,QAAS,CACP,eAAgB,sBAVtB,4CAJoB,sBAmBpB,IAnBoB,EA0BMhF,sBADV,SAACC,EAAOC,GAAR,sBAA2BD,EAA3B,GAAqCC,KANhC,CACnBC,KAAM,KACNC,MAAO,KACPC,QAAQ,EACRC,UAAU,IAvBQ,mBA0BbL,EA1Ba,KA0BNM,EA1BM,iDA4BpB,kCAAA+D,EAAA,0DACMpG,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAWC,MADrD,uBAEU6F,EAAStG,OAAOC,KAAKC,MAAMC,kBAAkBoG,YAAY9F,MAAM+F,kBAAkBC,QAAQoB,WAFnG,SAG2BnB,IAAMjG,IAAN,UAAakH,EAAb,oBAAkCrB,IAH7D,UAGUtD,EAHV,SAI6B,CACvBf,KAAMe,EAASf,KACfgB,OAAQD,EAASC,QAFXhB,EAJZ,EAIYA,KAMO,MAVnB,EAIkBgB,OAJlB,yCAWaZ,EAAS,CACdJ,OACAC,OAAO,EACPC,QAAQ,EACRC,UAAU,KAflB,OAoBIC,EAAS,CACPJ,OACAC,MAAO,KACPC,QAAQ,EACRC,UAAU,IAxBhB,4CA5BoB,sBA6DpB,OAJAe,qBAAU,YAzDU,mCA0DlB6E,KACC,IAGD,yBAAK1H,UAAU,8BACb,yBAAKA,UAAU,+BACb,kBAAC,EAAD,CAAYsB,MAAM,WAEnBG,EAAMI,OACP,8BACE7B,UAAU,4CACV+C,MAAO,CAACC,OAAQ,QAChB2E,YAAY,sBACZhB,MAAOlF,EAAME,KAAKqD,QAClBkC,SAxEc,8CAyEX,OC1CIU,MA/Bf,WAAsB,IAAD,EACqB5D,oBAAS,GAD9B,mBACZ6D,EADY,KACEC,EADF,KAQnB,SAAS9F,IACHtC,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAWC,OACjD2H,GAAgB,GAIpB,OAXAjF,qBAAU,WACRnD,OAAOC,KAAKC,MAAMC,kBAAkBK,WAAW4C,OAAOd,GACtDA,MACC,IASD,oCACG6F,EACC,oCACE,kBAAC,EAAD,MACA,yBAAK7H,UAAU,+BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAIJ,O,oBCkDO+H,MAtEf,WACE,IADa,EAOavG,sBADV,SAACC,EAAOC,GAAR,sBAA2BD,EAA3B,GAAqCC,KALhC,CACnBE,MAAO,KACPC,QAAQ,EACRC,UAAU,IAJC,mBAONL,EAPM,KAOCM,EAPD,KASPiG,EAAYC,EAAOC,SACnBC,EAAUF,EAAOG,OAGjBC,EAAiBJ,EAAOK,cAIxBC,EAASN,EAAOO,MActB,SAASC,IACP/I,OAAOC,KAAK0C,OAAOqG,KAAK,CACtBN,OAAQD,EACRD,SAAUF,EACVM,cAAeD,EACfG,MAAOD,IACN9F,MAAK,WACNV,EAAS,CACPH,OAAO,EACPC,QAAQ,EACRC,UAAU,OAEX,SAASF,GACVpC,QAAQC,IAAImC,MAQhB,OAJAiB,qBAAU,WAzBRnD,OAAOC,KAAKgJ,KAAK,eAAgBF,KA2BhC,IAGD,yBAAKzI,UAAU,0BAEZyB,EAAMI,OACP,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,IAAIC,SAAU,kBAAC,EAAD,QAChC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,SAAU,kBAAC,EAAD,WAK7C,OCjEYC,QACW,cAA7BrJ,OAAOa,SAASyI,UAEe,UAA7BtJ,OAAOa,SAASyI,UAEhBtJ,OAAOa,SAASyI,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,MAAK,SAAAgH,GACjCA,EAAaC,kB","file":"static/js/main.143c79ab.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport './Home.css';\n\nfunction Home() {\n  const history = useHistory();\n\n  function handleAuthClick(event) {\n    console.log(window.gapi.auth2.getAuthInstance());\n    window.gapi.auth2.getAuthInstance().signIn();\n    history.push(\"/dashboard\")\n  }\n\n  function handleSignoutClick(event) {\n    window.gapi.auth2.getAuthInstance().signOut();\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-container\">\n          <div className=\"logo\">\n            <img src=\"logo on dark.png\" />\n          </div>\n          <div className=\"nav-buttons\">\n            {window.gapi.auth2.getAuthInstance().isSignedIn.get() ?\n              <>\n                <button><Link to=\"/dashboard\">Dashboard</Link></button>\n                <button onClick={handleSignoutClick}>Sign Out</button> \n              </>\n              :\n              <button onClick={handleAuthClick}>Sign In</button>\n            }\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"nav-extension\">\n        <div className=\"extension-content\">\n          <div className=\"extension-header\">\n            Nibble makes it easier for you to \n            plan your daily tasks around your schedule.\n          </div>\n          <div className=\"extension-info\">\n            Take advantage of features such as Google calendar sync,\n            timing tasks, setting goals, and viewing your productivity on\n            a user dashboard to plan out your tasks daily and increase\n            your productivity!\n          </div>\n          <button className=\"green-button\" onClick={handleAuthClick}>\n            Get Started Today!\n          </button>\n        </div>\n        <div className=\"extension-picture\">\n          <img src=\"top_image.svg\" />\n        </div>\n      </div>\n\n      <div className=\"alternating-blocks\">\n        <div className=\"img-text-block\">\n          <div className=\"text-block\">\n            <div className=\"text-block-header\">Plan out your schedule</div>\n            <div className=\"text-block-content\">\n              Check your Google calendar to see your tasks for the day\n              or the week and create tasks accordingly \n            </div>\n          </div>\n          <div className=\"image-block\">\n            <img src=\"plan_schedule.svg\" />\n          </div>\n        </div>\n        <div className=\"img-text-block\">\n          <div className=\"text-block\">\n            <div className=\"text-block-header\">Create Goals</div>\n            <div className=\"text-block-content\">\n              Decide your goals of the week based off your tasks\n              and mark them off one by one \n            </div>\n          </div>\n          <div className=\"image-block\">\n            <img src=\"create_goals.svg\" />\n          </div>\n        </div>\n        <div className=\"img-text-block\">\n          <div className=\"text-block\">\n            <div className=\"text-block-header\">Time your tasks</div>\n            <div className=\"text-block-content\">\n              See how long your tasks take and keep track of\n              how much time you spent on each one\n            </div>\n          </div>\n          <div className=\"image-block\">\n            <img src=\"time_tasks.svg\" />\n          </div>\n        </div>\n        <div className=\"bottom-text\">\n          Start Nibbling Through Your Work!\n          <button className=\"green-button\" onClick={handleAuthClick}>Get Started Today!</button>\n        </div>\n      </div>\n      <footer>\n        <img className=\"logo-bottom\" src=\"logo on white.png\" />\n        © Copyright 2020. All rights reserved.\n      </footer>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction Header() {\n  const history = useHistory()\n\n  function handleSignoutClick(event) {\n    window.gapi.auth2.getAuthInstance().signOut();\n    history.push('/');\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"flex justify-between items-center px-5\">\n      <img src=\"logo on white.svg\" className=\"h-20 mb-4 w-auto\"/>\n      <div className=\"flex\">\n        <button onClick={handleSignoutClick}>Sign Out</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction ScheduleCard({event}) {\n\n  let eventDate = new Date(event.start.dateTime);\n  eventDate = `${eventDate.getMonth()+1}/${eventDate.getDate()}/${eventDate.getFullYear()} ${eventDate.getHours()}:${eventDate.getMinutes()}`;\n\n  return (\n    <div className=\"max-w-sm w-full rounded-md bg-white lg:max-w-full mb-4 shadow-md\">\n      <div className=\"p-4 flex flex-col justify-between leading-normal\">\n        <div className=\"my-2\">\n          <div className=\"text-gray-900 font-bold text-xl\">{`${event.summary}`}</div>\n          {/* <div className=\"text-gray-700 text-base\">{`${task.category}`}</div> */}\n          <div className=\" text-sm text-gray-900 leading-none\">{`${eventDate}`}</div>\n        </div>\n      </div>\n    </div>\n    // <div> \n    //   {`${event.summary} (${eventDate})`}\n    // </div>\n  )\n}\n\nexport default ScheduleCard;","import React from 'react';\n\nfunction HeaderText({title = \"Header\"}) {\n  \n  return (\n    <div> \n      <h2 className=\"text-4xl mb-2 mr-2\">{title}</h2>\n    </div>\n  )\n}\n\nexport default HeaderText;","import React, { useReducer, useEffect } from 'react';\nimport ScheduleCard from './ScheduleCard';\nimport HeaderText from './HeaderText';\n\nimport './ScheduleCardBlock.css';\n\nfunction ScheduleCardBlock() {\n  const initialState = {\n    data: null,\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n  function updateSigninStatus() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      // authorizeButton.style.display = 'none';\n      // signoutButton.style.display = 'block';\n      listUpcomingEvents();\n    } else {\n      // authorizeButton.style.display = 'block';\n      // signoutButton.style.display = 'none';\n    }\n  }\n\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n  function listUpcomingEvents() {\n    const minDate = (new Date()).toISOString();\n    let maxDate= (new Date());\n    maxDate.setDate(maxDate.getDate() + 7);\n    maxDate = maxDate.toISOString();\n    window.gapi.client.calendar.events.list({\n      'calendarId': 'primary',\n      'timeMin': minDate,\n      'timeMax': maxDate,\n      'showDeleted': false,\n      'singleEvents': true,\n      'maxResults': 20,\n      'orderBy': 'startTime'\n    }).then(function(response) {\n      const { data, status } = {\n        data: response,\n        status: response.status\n      }\n      if (status !== 200) {\n        return setState({\n          data,\n          error: true,\n          loaded: true,\n          fetching: false,\n        })\n      }\n      setState({\n        data,\n        error: null,\n        loaded: true,\n        fetching: false,\n      })\n    });\n  }\n\n  useEffect(() => {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n    // Handle the initial sign-in state.\n    updateSigninStatus();\n  }, [])\n\n\n  // const { error, data } = state\n  return (\n    <div className=\"container w-1/3 schedTheme\">\n      <HeaderText title=\"Schedule\"/>\n      <div className=\"shadow-inner p-4 rounded-md overflow-y-scroll schedBody\" style={{height: \"76vh\"}}>\n        {state.loaded ? state.data.result.items.map(cur => {\n          return <ScheduleCard key={cur.id} event={cur}/>\n        }) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduleCardBlock;","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nfunction TaskCard({task}) {\n  const currentTime = moment().utc();\n  const startedTime = moment(task.time_started);\n  const timeDiff = moment.utc(moment(currentTime,\"DD/MM/YYYY HH:mm:ss\").diff(moment(startedTime,\"DD/MM/YYYY HH:mm:ss\")));\n  const [timeElapsed, setTimeElapsed] = useState(timeDiff);\n\n  useEffect(() => {\n    if (task.time_started) {\n      const interval = setInterval(() => {\n        setTimeElapsed(timeElapsed => moment(timeElapsed).add(1, 'seconds'));\n      }, 1000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [])\n\n  return(\n    <div className=\"max-w-sm w-full bg-white lg:max-w-full mb-4\">\n      <div className=\"border border-white rounded-md shadow-lg p-4 flex flex-col justify-between leading-normal\">\n        <div className=\"my-2 flex items-center\">\n          <div className=\"text-gray-900 font-bold text-xl w-4/12\">{`${task.title}`}</div>\n          <div className=\"text-gray-700 text-base w-4/12\">{`${task.category}`}</div>\n          <div className=\" text-sm text-gray-900 leading-none w-4/12\">\n            {task.time_started ? `${timeElapsed.format(\"HH:mm:ss\")} /`: null} {moment.utc().hours(Math.floor(task.estimated_time/60)).minutes(Math.floor(task.estimated_time%60)).seconds(0).format(\"hh:mm:ss\")}\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TaskCard;","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport axios from 'axios';\n \nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n \n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n// Modal.setAppElement('#yourAppElement')\n \nfunction CreateTaskButton({updateTasks}){\n  var subtitle;\n  const apiServer = 'http://localhost:5001/'\n  const [modalIsOpen,setIsOpen] = useState(false);\n  const [payload, setPayload] = useState({});\n\n  function openModal() {\n    setIsOpen(true);\n  }\n \n  function closeModal(){\n    setIsOpen(false);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(payload);\n    const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId();\n    payload['userID'] = userID\n    setPayload(payload);\n    console.log(payload);\n    await axios.post(`${apiServer}createTask`, JSON.stringify(payload), {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    closeModal();\n    updateTasks();\n  }\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    payload[name] = value;\n    setPayload(payload);\n    console.log(payload);\n  }\n \n  return (\n    <div>\n      <button className=\"text-yellow-500 hover:text-yellow-600 font-bold text-4xl leading-5\" onClick={openModal}>+</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        {/* <button onClick={closeModal}>close</button> */}\n        <div className=\"block uppercase tracking-wide text-gray-900 text-xl font-bold mb-2\">Create Task</div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\n                Task Name\n              </label>\n              <input name=\"title\" onChange={handleInputChange} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-first-name\" type=\"text\" />\n            </div>\n            <div className=\"w-3/4 px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\n                Category\n              </label>\n              <input name=\"category\" onChange={handleInputChange} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-first-name\" type=\"text\" />\n            </div>\n            <div className=\"w-1/4 px-3 mb-6 md:mb-0\">\n              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-first-name\">\n                Estimated Time\n              </label>\n              <input name=\"estimatedTime\" onChange={handleInputChange} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-first-name\" type=\"text\" />\n            </div>\n          </div>\n          <input type=\"submit\" value=\"Submit\" onChange={handleInputChange} className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded\"/>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CreateTaskButton;","import React, { useReducer, useEffect } from 'react';\nimport TaskCard from './TaskCard';\nimport HeaderText from './HeaderText';\nimport CreateTaskButton from './CreateTaskButton';\nimport axios from 'axios';\n\nimport './TaskCardBlock.css';\n\nfunction TaskCardBlock() {\n  const apiServer = 'http://localhost:5001/';\n\n  const initialState = {\n    data: null,\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n\n  async function loadTasks() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId().toString();\n      console.log(`${apiServer}getTasks/${userID}`)\n      const response = await axios.get(`${apiServer}getTasks/${userID}`)\n      const { data, status } = {\n        data: response.data,\n        status: response.status\n      }\n      \n      // error? \n      if (status !== 200) {\n        return setState({\n          data,\n          error: true,\n          loaded: true,\n          fetching: false,\n        })\n      }\n\n      // no error \n      setState({\n        data,\n        error: null,\n        loaded: true,\n        fetching: false,\n      })\n    }\n  }\n\n  useEffect(() => {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(loadTasks);\n    // Handle the initial sign-in state.\n    loadTasks();\n  }, [])\n\n  return (\n    <div className=\"container w-2/5 taskTheme\">\n      <div className=\"container flex items-center justify-between\">\n        <HeaderText title=\"Tasks\"/>\n        <CreateTaskButton updateTasks={loadTasks}/>\n      </div>\n      <div className=\"shadow-inner p-4 rounded-md overflow-y-scroll\" style={{height: \"76vh\"}}>\n        {state.loaded ? state.data.map(cur => {\n          return <TaskCard key={cur.id} task={cur}/>\n        }) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default TaskCardBlock;","import React, { useState, useReducer, useEffect } from 'react';\nimport HeaderText from \"./HeaderText\";\nimport axios from 'axios';\n\nimport './NotesBlock.css';\n\nfunction NotesBlock() {\n  const apiServer = 'http://localhost:5001/';\n  const [payload, setPayload] = useState({});\n\n  async function onInputChange(event) {\n    const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId();\n    setState({\n      data: event.target.value\n    });\n    payload['userID'] = userID;\n    payload['note'] = event.target.value;\n    setPayload(payload);\n    await axios.put(`${apiServer}updateNotes/${userID}`, JSON.stringify(payload), {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n  }\n\n  const initialState = {\n    data: null,\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n\n  async function getNotes() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      const userID = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getId().toString();\n      const response = await axios.get(`${apiServer}getNotes/${userID}`)\n      const { data, status } = {\n        data: response.data,\n        status: response.status\n      }\n      \n      // error? \n      if (status !== 200) {\n        return setState({\n          data,\n          error: true,\n          loaded: true,\n          fetching: false,\n        })\n      }\n\n      // no error \n      setState({\n        data,\n        error: null,\n        loaded: true,\n        fetching: false,\n      })\n    }\n  }\n\n  useEffect(() => {\n    getNotes();\n  }, [])\n\n  return (\n    <div className=\"container w-1/3 notesTheme\">\n      <div className=\"container flex items-center\">\n        <HeaderText title=\"Notes\"/>\n      </div>\n      {state.loaded ?\n      <textarea \n        className=\"shadow-inner p-4 rounded-md w-full h-full\" \n        style={{height: \"74vh\"}}\n        placeholder=\"Write some notes...\" \n        value={state.data.content}\n        onChange={onInputChange}\n      /> : null}\n    </div>\n  );\n}\n\nexport default NotesBlock;","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ScheduleCardBlock from './ScheduleCardBlock';\nimport TaskCardBlock from './TaskCardBlock';\nimport NotesBlock from './NotesBlock';\n\nfunction Dashboard() {\n  const [signInStatus, setSignInStatus] = useState(false);\n\n  useEffect(() => {\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n    updateSigninStatus();\n  }, [])\n\n  function updateSigninStatus() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      setSignInStatus(true);\n    }\n  }\n\n  return (\n    <>\n      {signInStatus ?\n        <>\n          <Header />\n          <div className=\"flex justify-between w-full\">\n            <ScheduleCardBlock />\n            <TaskCardBlock />\n            <NotesBlock />\n          </div> \n        </> \n      : \n        null}\n    </>\n  );\n}\n\nexport default Dashboard;","import React, { useReducer, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport config from './apiGoogleConfig.json';\nimport './App.css';\nimport './tailwind.css'\n\nfunction App() {\n  const initialState = {\n    error: null,\n    loaded: false,\n    fetching: false,\n  }\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState);\n  \n  const CLIENT_ID = config.clientId;\n  const API_KEY = config.apiKey;\n\n  // Array of API discovery doc URLs for APIs used by the quickstart\n  const DISCOVERY_DOCS = config.discoveryDocs;\n\n  // Authorization scopes required by the API; multiple scopes can be\n  // included, separated by spaces.\n  const SCOPES = config.scope;\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  function handleClientLoad() {\n    window.gapi.load('client:auth2', initClient);\n  }\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n\n  function initClient() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      setState({\n        error: true,\n        loaded: true,\n        fetching: false,\n      })\n    }, function(error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    handleClientLoad();\n  }, [])\n\n  return (\n    <div className=\"App w-full nibbleTheme\">\n      {/* <Home /> */}\n      {state.loaded ?\n      <>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" children={<Home />} />\n            <Route exact path=\"/dashboard\" children={<Dashboard />} />\n          </Switch>\n        </Router>\n\n      </>\n      : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}